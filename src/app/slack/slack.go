package slack

import (
	"bytes"
	"encoding/json"
	"net/http"
	"os"

	"appengine"

	"appengine/urlfetch"
)

func GetWebhookURL() string {
	return os.Getenv("SLACK_WEBHOOK_URL")
}

type Payload struct {
	Username    string        `json:"username"`
	Text        string        `json:"text"`
	IsMarkdown  bool          `json:"mrkdwn"`
	Attachments []*Attachment `json:"attachments"`
}

type Attachment struct {
	Pretext   string  `json:"pretext"`
	Field     []Field `json:"fields"`
	TimeStamp int64   `json:"ts"`
}

type Field struct {
	Title string `json:"title"`
	Value string `json:"value"`
	Short bool   `json:"short"`
}

type Client struct {
	*http.Client
	url string
}

func NewClient(ctx appengine.Context, url string) *Client {
	return &Client{
		Client: urlfetch.Client(ctx),
		url:    url,
	}
}

func (c *Client) Post(p *Payload) error {
	b := new(bytes.Buffer)
	if err := json.NewEncoder(b).Encode(p); err != nil {
		return err
	}

	res, err := c.Client.Post(c.url, "application/json", b)
	if err != nil {
		return err
	}
	_ = res
	return nil
}
