package main

import (
	"fmt"
	"log"
	"strings"

	"github.com/SlyMarbo/rss"
)

const url = "https://nvd.nist.gov/download/nvd-rss-analyzed.xml"

var fetcher = rss.Fetch

func main() {
	items, err := getFilteredItems(url)
	if err != nil {
		log.Fatal(err)
	}

	for _, item := range items {
		fmt.Println(item.ID, item.Title)
	}
}

var want = map[string]bool{
	"php": true,
}

func getFilteredItems(url string) ([]*rss.Item, error) {
	feed, err := fetcher(url)
	if err != nil {
		return nil, err
	}

	var items []*rss.Item

	for _, item := range feed.Items {
		if matchFeed(item) {
			items = append(items, item)
		}
	}

	return items, nil
}

func matchFeed(item *rss.Item) bool {
	title := item.Title

	openParent := strings.IndexByte(title, '(')
	closeParent := strings.IndexByte(title, ')')
	if closeParent <= openParent {
		// Something like )(.
		return false
	}

	vendors := strings.Split(title[openParent+1:closeParent], ", ")

	for _, vendor := range vendors {
		if want[vendor] {
			return true
		}
	}

	return false
}
