package driver

import (
	"app/cvestore"
	"encoding/json"
	"flag"
	"io/ioutil"
	"log"
	"net/http"
	"testing"

	"appengine/aetest"

	"github.com/SlyMarbo/rss"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

var update = flag.Bool("update", false, "update golden files")

const golden = "testdata/filtered.json"

func init() {
	fetcher = func(_ string, _ *http.Client) (*rss.Feed, error) {
		blob, err := ioutil.ReadFile("testdata/nvd-rss-analyzed.xml")
		if err != nil {
			log.Fatal(err)
		}
		return rss.Parse(blob)
	}
}

func TestGetFilteredItems(t *testing.T) {
	ctx, err := aetest.NewContext(nil)
	if err != nil {
		t.Fatal(err)
	}
	defer ctx.Close()

	actual, err := getFilteredItems(ctx, "dummy_url")
	assert.NoError(t, err)

	if *update {
		blob, err := json.MarshalIndent(actual, "", "\t")
		require.NoError(t, err)
		require.NoError(t, ioutil.WriteFile(golden, blob, 0666))
	}

	blob, err := ioutil.ReadFile(golden)
	require.NoError(t, err)

	var expected []cvestore.Item
	require.NoError(t, json.Unmarshal(blob, &expected))
	assert.Equal(t, expected, actual)
}
